// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"github.com/speakeasy-sdks/merge-ats-go/pkg/models/shared"
	"github.com/speakeasy-sdks/merge-ats-go/pkg/types"
	"github.com/speakeasy-sdks/merge-ats-go/pkg/utils"
	"net/http"
)

// EeocsRetrieveRemoteFields - Deprecated. Use show_enum_origins.
type EeocsRetrieveRemoteFields string

const (
	EeocsRetrieveRemoteFieldsDisabilityStatus                        EeocsRetrieveRemoteFields = "disability_status"
	EeocsRetrieveRemoteFieldsDisabilityStatusGender                  EeocsRetrieveRemoteFields = "disability_status,gender"
	EeocsRetrieveRemoteFieldsDisabilityStatusGenderRace              EeocsRetrieveRemoteFields = "disability_status,gender,race"
	EeocsRetrieveRemoteFieldsDisabilityStatusGenderRaceVeteranStatus EeocsRetrieveRemoteFields = "disability_status,gender,race,veteran_status"
	EeocsRetrieveRemoteFieldsDisabilityStatusGenderVeteranStatus     EeocsRetrieveRemoteFields = "disability_status,gender,veteran_status"
	EeocsRetrieveRemoteFieldsDisabilityStatusRace                    EeocsRetrieveRemoteFields = "disability_status,race"
	EeocsRetrieveRemoteFieldsDisabilityStatusRaceVeteranStatus       EeocsRetrieveRemoteFields = "disability_status,race,veteran_status"
	EeocsRetrieveRemoteFieldsDisabilityStatusVeteranStatus           EeocsRetrieveRemoteFields = "disability_status,veteran_status"
	EeocsRetrieveRemoteFieldsGender                                  EeocsRetrieveRemoteFields = "gender"
	EeocsRetrieveRemoteFieldsGenderRace                              EeocsRetrieveRemoteFields = "gender,race"
	EeocsRetrieveRemoteFieldsGenderRaceVeteranStatus                 EeocsRetrieveRemoteFields = "gender,race,veteran_status"
	EeocsRetrieveRemoteFieldsGenderVeteranStatus                     EeocsRetrieveRemoteFields = "gender,veteran_status"
	EeocsRetrieveRemoteFieldsRace                                    EeocsRetrieveRemoteFields = "race"
	EeocsRetrieveRemoteFieldsRaceVeteranStatus                       EeocsRetrieveRemoteFields = "race,veteran_status"
	EeocsRetrieveRemoteFieldsVeteranStatus                           EeocsRetrieveRemoteFields = "veteran_status"
)

func (e EeocsRetrieveRemoteFields) ToPointer() *EeocsRetrieveRemoteFields {
	return &e
}

func (e *EeocsRetrieveRemoteFields) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "disability_status":
		fallthrough
	case "disability_status,gender":
		fallthrough
	case "disability_status,gender,race":
		fallthrough
	case "disability_status,gender,race,veteran_status":
		fallthrough
	case "disability_status,gender,veteran_status":
		fallthrough
	case "disability_status,race":
		fallthrough
	case "disability_status,race,veteran_status":
		fallthrough
	case "disability_status,veteran_status":
		fallthrough
	case "gender":
		fallthrough
	case "gender,race":
		fallthrough
	case "gender,race,veteran_status":
		fallthrough
	case "gender,veteran_status":
		fallthrough
	case "race":
		fallthrough
	case "race,veteran_status":
		fallthrough
	case "veteran_status":
		*e = EeocsRetrieveRemoteFields(v)
		return nil
	default:
		return fmt.Errorf("invalid value for EeocsRetrieveRemoteFields: %v", v)
	}
}

// EeocsRetrieveShowEnumOrigins - Which fields should be returned in non-normalized form.
type EeocsRetrieveShowEnumOrigins string

const (
	EeocsRetrieveShowEnumOriginsDisabilityStatus                        EeocsRetrieveShowEnumOrigins = "disability_status"
	EeocsRetrieveShowEnumOriginsDisabilityStatusGender                  EeocsRetrieveShowEnumOrigins = "disability_status,gender"
	EeocsRetrieveShowEnumOriginsDisabilityStatusGenderRace              EeocsRetrieveShowEnumOrigins = "disability_status,gender,race"
	EeocsRetrieveShowEnumOriginsDisabilityStatusGenderRaceVeteranStatus EeocsRetrieveShowEnumOrigins = "disability_status,gender,race,veteran_status"
	EeocsRetrieveShowEnumOriginsDisabilityStatusGenderVeteranStatus     EeocsRetrieveShowEnumOrigins = "disability_status,gender,veteran_status"
	EeocsRetrieveShowEnumOriginsDisabilityStatusRace                    EeocsRetrieveShowEnumOrigins = "disability_status,race"
	EeocsRetrieveShowEnumOriginsDisabilityStatusRaceVeteranStatus       EeocsRetrieveShowEnumOrigins = "disability_status,race,veteran_status"
	EeocsRetrieveShowEnumOriginsDisabilityStatusVeteranStatus           EeocsRetrieveShowEnumOrigins = "disability_status,veteran_status"
	EeocsRetrieveShowEnumOriginsGender                                  EeocsRetrieveShowEnumOrigins = "gender"
	EeocsRetrieveShowEnumOriginsGenderRace                              EeocsRetrieveShowEnumOrigins = "gender,race"
	EeocsRetrieveShowEnumOriginsGenderRaceVeteranStatus                 EeocsRetrieveShowEnumOrigins = "gender,race,veteran_status"
	EeocsRetrieveShowEnumOriginsGenderVeteranStatus                     EeocsRetrieveShowEnumOrigins = "gender,veteran_status"
	EeocsRetrieveShowEnumOriginsRace                                    EeocsRetrieveShowEnumOrigins = "race"
	EeocsRetrieveShowEnumOriginsRaceVeteranStatus                       EeocsRetrieveShowEnumOrigins = "race,veteran_status"
	EeocsRetrieveShowEnumOriginsVeteranStatus                           EeocsRetrieveShowEnumOrigins = "veteran_status"
)

func (e EeocsRetrieveShowEnumOrigins) ToPointer() *EeocsRetrieveShowEnumOrigins {
	return &e
}

func (e *EeocsRetrieveShowEnumOrigins) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "disability_status":
		fallthrough
	case "disability_status,gender":
		fallthrough
	case "disability_status,gender,race":
		fallthrough
	case "disability_status,gender,race,veteran_status":
		fallthrough
	case "disability_status,gender,veteran_status":
		fallthrough
	case "disability_status,race":
		fallthrough
	case "disability_status,race,veteran_status":
		fallthrough
	case "disability_status,veteran_status":
		fallthrough
	case "gender":
		fallthrough
	case "gender,race":
		fallthrough
	case "gender,race,veteran_status":
		fallthrough
	case "gender,veteran_status":
		fallthrough
	case "race":
		fallthrough
	case "race,veteran_status":
		fallthrough
	case "veteran_status":
		*e = EeocsRetrieveShowEnumOrigins(v)
		return nil
	default:
		return fmt.Errorf("invalid value for EeocsRetrieveShowEnumOrigins: %v", v)
	}
}

type EeocsRetrieveRequest struct {
	// Token identifying the end user.
	XAccountToken string `header:"style=simple,explode=false,name=X-Account-Token"`
	// Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces.
	expand *string `const:"candidate" queryParam:"style=form,explode=true,name=expand"`
	ID     string  `pathParam:"style=simple,explode=false,name=id"`
	// Whether to include the original data Merge fetched from the third-party to produce these models.
	IncludeRemoteData *bool `queryParam:"style=form,explode=true,name=include_remote_data"`
	// Deprecated. Use show_enum_origins.
	RemoteFields *EeocsRetrieveRemoteFields `queryParam:"style=form,explode=true,name=remote_fields"`
	// Which fields should be returned in non-normalized form.
	ShowEnumOrigins *EeocsRetrieveShowEnumOrigins `queryParam:"style=form,explode=true,name=show_enum_origins"`
}

func (e EeocsRetrieveRequest) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(e, "", false)
}

func (e *EeocsRetrieveRequest) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &e, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *EeocsRetrieveRequest) GetXAccountToken() string {
	if o == nil {
		return ""
	}
	return o.XAccountToken
}

func (o *EeocsRetrieveRequest) GetExpand() *string {
	return types.String("candidate")
}

func (o *EeocsRetrieveRequest) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *EeocsRetrieveRequest) GetIncludeRemoteData() *bool {
	if o == nil {
		return nil
	}
	return o.IncludeRemoteData
}

func (o *EeocsRetrieveRequest) GetRemoteFields() *EeocsRetrieveRemoteFields {
	if o == nil {
		return nil
	}
	return o.RemoteFields
}

func (o *EeocsRetrieveRequest) GetShowEnumOrigins() *EeocsRetrieveShowEnumOrigins {
	if o == nil {
		return nil
	}
	return o.ShowEnumOrigins
}

type EeocsRetrieveResponse struct {
	ContentType string
	Eeoc        *shared.Eeoc
	StatusCode  int
	RawResponse *http.Response
}

func (o *EeocsRetrieveResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *EeocsRetrieveResponse) GetEeoc() *shared.Eeoc {
	if o == nil {
		return nil
	}
	return o.Eeoc
}

func (o *EeocsRetrieveResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *EeocsRetrieveResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}
