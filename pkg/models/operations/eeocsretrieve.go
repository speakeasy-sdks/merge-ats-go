// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"github.com/speakeasy-sdks/merge-ats-go/pkg/models/shared"
	"net/http"
)

// EeocsRetrieveQueryParamExpand - Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces.
type EeocsRetrieveQueryParamExpand string

const (
	EeocsRetrieveQueryParamExpandCandidate EeocsRetrieveQueryParamExpand = "candidate"
)

func (e EeocsRetrieveQueryParamExpand) ToPointer() *EeocsRetrieveQueryParamExpand {
	return &e
}

func (e *EeocsRetrieveQueryParamExpand) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "candidate":
		*e = EeocsRetrieveQueryParamExpand(v)
		return nil
	default:
		return fmt.Errorf("invalid value for EeocsRetrieveQueryParamExpand: %v", v)
	}
}

// EeocsRetrieveQueryParamRemoteFields - Deprecated. Use show_enum_origins.
type EeocsRetrieveQueryParamRemoteFields string

const (
	EeocsRetrieveQueryParamRemoteFieldsDisabilityStatus                        EeocsRetrieveQueryParamRemoteFields = "disability_status"
	EeocsRetrieveQueryParamRemoteFieldsDisabilityStatusGender                  EeocsRetrieveQueryParamRemoteFields = "disability_status,gender"
	EeocsRetrieveQueryParamRemoteFieldsDisabilityStatusGenderRace              EeocsRetrieveQueryParamRemoteFields = "disability_status,gender,race"
	EeocsRetrieveQueryParamRemoteFieldsDisabilityStatusGenderRaceVeteranStatus EeocsRetrieveQueryParamRemoteFields = "disability_status,gender,race,veteran_status"
	EeocsRetrieveQueryParamRemoteFieldsDisabilityStatusGenderVeteranStatus     EeocsRetrieveQueryParamRemoteFields = "disability_status,gender,veteran_status"
	EeocsRetrieveQueryParamRemoteFieldsDisabilityStatusRace                    EeocsRetrieveQueryParamRemoteFields = "disability_status,race"
	EeocsRetrieveQueryParamRemoteFieldsDisabilityStatusRaceVeteranStatus       EeocsRetrieveQueryParamRemoteFields = "disability_status,race,veteran_status"
	EeocsRetrieveQueryParamRemoteFieldsDisabilityStatusVeteranStatus           EeocsRetrieveQueryParamRemoteFields = "disability_status,veteran_status"
	EeocsRetrieveQueryParamRemoteFieldsGender                                  EeocsRetrieveQueryParamRemoteFields = "gender"
	EeocsRetrieveQueryParamRemoteFieldsGenderRace                              EeocsRetrieveQueryParamRemoteFields = "gender,race"
	EeocsRetrieveQueryParamRemoteFieldsGenderRaceVeteranStatus                 EeocsRetrieveQueryParamRemoteFields = "gender,race,veteran_status"
	EeocsRetrieveQueryParamRemoteFieldsGenderVeteranStatus                     EeocsRetrieveQueryParamRemoteFields = "gender,veteran_status"
	EeocsRetrieveQueryParamRemoteFieldsRace                                    EeocsRetrieveQueryParamRemoteFields = "race"
	EeocsRetrieveQueryParamRemoteFieldsRaceVeteranStatus                       EeocsRetrieveQueryParamRemoteFields = "race,veteran_status"
	EeocsRetrieveQueryParamRemoteFieldsVeteranStatus                           EeocsRetrieveQueryParamRemoteFields = "veteran_status"
)

func (e EeocsRetrieveQueryParamRemoteFields) ToPointer() *EeocsRetrieveQueryParamRemoteFields {
	return &e
}

func (e *EeocsRetrieveQueryParamRemoteFields) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "disability_status":
		fallthrough
	case "disability_status,gender":
		fallthrough
	case "disability_status,gender,race":
		fallthrough
	case "disability_status,gender,race,veteran_status":
		fallthrough
	case "disability_status,gender,veteran_status":
		fallthrough
	case "disability_status,race":
		fallthrough
	case "disability_status,race,veteran_status":
		fallthrough
	case "disability_status,veteran_status":
		fallthrough
	case "gender":
		fallthrough
	case "gender,race":
		fallthrough
	case "gender,race,veteran_status":
		fallthrough
	case "gender,veteran_status":
		fallthrough
	case "race":
		fallthrough
	case "race,veteran_status":
		fallthrough
	case "veteran_status":
		*e = EeocsRetrieveQueryParamRemoteFields(v)
		return nil
	default:
		return fmt.Errorf("invalid value for EeocsRetrieveQueryParamRemoteFields: %v", v)
	}
}

// EeocsRetrieveQueryParamShowEnumOrigins - Which fields should be returned in non-normalized form.
type EeocsRetrieveQueryParamShowEnumOrigins string

const (
	EeocsRetrieveQueryParamShowEnumOriginsDisabilityStatus                        EeocsRetrieveQueryParamShowEnumOrigins = "disability_status"
	EeocsRetrieveQueryParamShowEnumOriginsDisabilityStatusGender                  EeocsRetrieveQueryParamShowEnumOrigins = "disability_status,gender"
	EeocsRetrieveQueryParamShowEnumOriginsDisabilityStatusGenderRace              EeocsRetrieveQueryParamShowEnumOrigins = "disability_status,gender,race"
	EeocsRetrieveQueryParamShowEnumOriginsDisabilityStatusGenderRaceVeteranStatus EeocsRetrieveQueryParamShowEnumOrigins = "disability_status,gender,race,veteran_status"
	EeocsRetrieveQueryParamShowEnumOriginsDisabilityStatusGenderVeteranStatus     EeocsRetrieveQueryParamShowEnumOrigins = "disability_status,gender,veteran_status"
	EeocsRetrieveQueryParamShowEnumOriginsDisabilityStatusRace                    EeocsRetrieveQueryParamShowEnumOrigins = "disability_status,race"
	EeocsRetrieveQueryParamShowEnumOriginsDisabilityStatusRaceVeteranStatus       EeocsRetrieveQueryParamShowEnumOrigins = "disability_status,race,veteran_status"
	EeocsRetrieveQueryParamShowEnumOriginsDisabilityStatusVeteranStatus           EeocsRetrieveQueryParamShowEnumOrigins = "disability_status,veteran_status"
	EeocsRetrieveQueryParamShowEnumOriginsGender                                  EeocsRetrieveQueryParamShowEnumOrigins = "gender"
	EeocsRetrieveQueryParamShowEnumOriginsGenderRace                              EeocsRetrieveQueryParamShowEnumOrigins = "gender,race"
	EeocsRetrieveQueryParamShowEnumOriginsGenderRaceVeteranStatus                 EeocsRetrieveQueryParamShowEnumOrigins = "gender,race,veteran_status"
	EeocsRetrieveQueryParamShowEnumOriginsGenderVeteranStatus                     EeocsRetrieveQueryParamShowEnumOrigins = "gender,veteran_status"
	EeocsRetrieveQueryParamShowEnumOriginsRace                                    EeocsRetrieveQueryParamShowEnumOrigins = "race"
	EeocsRetrieveQueryParamShowEnumOriginsRaceVeteranStatus                       EeocsRetrieveQueryParamShowEnumOrigins = "race,veteran_status"
	EeocsRetrieveQueryParamShowEnumOriginsVeteranStatus                           EeocsRetrieveQueryParamShowEnumOrigins = "veteran_status"
)

func (e EeocsRetrieveQueryParamShowEnumOrigins) ToPointer() *EeocsRetrieveQueryParamShowEnumOrigins {
	return &e
}

func (e *EeocsRetrieveQueryParamShowEnumOrigins) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "disability_status":
		fallthrough
	case "disability_status,gender":
		fallthrough
	case "disability_status,gender,race":
		fallthrough
	case "disability_status,gender,race,veteran_status":
		fallthrough
	case "disability_status,gender,veteran_status":
		fallthrough
	case "disability_status,race":
		fallthrough
	case "disability_status,race,veteran_status":
		fallthrough
	case "disability_status,veteran_status":
		fallthrough
	case "gender":
		fallthrough
	case "gender,race":
		fallthrough
	case "gender,race,veteran_status":
		fallthrough
	case "gender,veteran_status":
		fallthrough
	case "race":
		fallthrough
	case "race,veteran_status":
		fallthrough
	case "veteran_status":
		*e = EeocsRetrieveQueryParamShowEnumOrigins(v)
		return nil
	default:
		return fmt.Errorf("invalid value for EeocsRetrieveQueryParamShowEnumOrigins: %v", v)
	}
}

type EeocsRetrieveRequest struct {
	// Token identifying the end user.
	XAccountToken string `header:"style=simple,explode=false,name=X-Account-Token"`
	// Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces.
	Expand *EeocsRetrieveQueryParamExpand `queryParam:"style=form,explode=true,name=expand"`
	ID     string                         `pathParam:"style=simple,explode=false,name=id"`
	// Whether to include the original data Merge fetched from the third-party to produce these models.
	IncludeRemoteData *bool `queryParam:"style=form,explode=true,name=include_remote_data"`
	// Deprecated. Use show_enum_origins.
	RemoteFields *EeocsRetrieveQueryParamRemoteFields `queryParam:"style=form,explode=true,name=remote_fields"`
	// Which fields should be returned in non-normalized form.
	ShowEnumOrigins *EeocsRetrieveQueryParamShowEnumOrigins `queryParam:"style=form,explode=true,name=show_enum_origins"`
}

func (o *EeocsRetrieveRequest) GetXAccountToken() string {
	if o == nil {
		return ""
	}
	return o.XAccountToken
}

func (o *EeocsRetrieveRequest) GetExpand() *EeocsRetrieveQueryParamExpand {
	if o == nil {
		return nil
	}
	return o.Expand
}

func (o *EeocsRetrieveRequest) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *EeocsRetrieveRequest) GetIncludeRemoteData() *bool {
	if o == nil {
		return nil
	}
	return o.IncludeRemoteData
}

func (o *EeocsRetrieveRequest) GetRemoteFields() *EeocsRetrieveQueryParamRemoteFields {
	if o == nil {
		return nil
	}
	return o.RemoteFields
}

func (o *EeocsRetrieveRequest) GetShowEnumOrigins() *EeocsRetrieveQueryParamShowEnumOrigins {
	if o == nil {
		return nil
	}
	return o.ShowEnumOrigins
}

type EeocsRetrieveResponse struct {
	// HTTP response content type for this operation
	ContentType string
	Eeoc        *shared.Eeoc
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
}

func (o *EeocsRetrieveResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *EeocsRetrieveResponse) GetEeoc() *shared.Eeoc {
	if o == nil {
		return nil
	}
	return o.Eeoc
}

func (o *EeocsRetrieveResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *EeocsRetrieveResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}
