// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"github.com/speakeasy-sdks/merge-ats-go/pkg/models/shared"
	"net/http"
)

type SelectiveSyncMetaListSecurity struct {
	TokenAuth string `security:"scheme,type=apiKey,subtype=header,name=Authorization"`
}

func (o *SelectiveSyncMetaListSecurity) GetTokenAuth() string {
	if o == nil {
		return ""
	}
	return o.TokenAuth
}

type SelectiveSyncMetaListRequest struct {
	// Token identifying the end user.
	XAccountToken string  `header:"style=simple,explode=false,name=X-Account-Token"`
	CommonModel   *string `queryParam:"style=form,explode=true,name=common_model"`
	// The pagination cursor value.
	Cursor *string `queryParam:"style=form,explode=true,name=cursor"`
	// Number of results to return per page.
	PageSize *int64 `queryParam:"style=form,explode=true,name=page_size"`
}

func (o *SelectiveSyncMetaListRequest) GetXAccountToken() string {
	if o == nil {
		return ""
	}
	return o.XAccountToken
}

func (o *SelectiveSyncMetaListRequest) GetCommonModel() *string {
	if o == nil {
		return nil
	}
	return o.CommonModel
}

func (o *SelectiveSyncMetaListRequest) GetCursor() *string {
	if o == nil {
		return nil
	}
	return o.Cursor
}

func (o *SelectiveSyncMetaListRequest) GetPageSize() *int64 {
	if o == nil {
		return nil
	}
	return o.PageSize
}

type SelectiveSyncMetaListResponse struct {
	ContentType                  string
	PaginatedConditionSchemaList *shared.PaginatedConditionSchemaList
	StatusCode                   int
	RawResponse                  *http.Response
}

func (o *SelectiveSyncMetaListResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *SelectiveSyncMetaListResponse) GetPaginatedConditionSchemaList() *shared.PaginatedConditionSchemaList {
	if o == nil {
		return nil
	}
	return o.PaginatedConditionSchemaList
}

func (o *SelectiveSyncMetaListResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *SelectiveSyncMetaListResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}
