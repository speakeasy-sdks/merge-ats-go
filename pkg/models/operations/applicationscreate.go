// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"github.com/speakeasy-sdks/merge-ats-go/pkg/models/shared"
	"net/http"
)

type ApplicationsCreateRequest struct {
	ApplicationEndpointRequest shared.ApplicationEndpointRequest `request:"mediaType=application/json"`
	// Token identifying the end user.
	XAccountToken string `header:"style=simple,explode=false,name=X-Account-Token"`
	// Whether to include debug fields (such as log file links) in the response.
	IsDebugMode *bool `queryParam:"style=form,explode=true,name=is_debug_mode"`
	// Whether or not third-party updates should be run asynchronously.
	RunAsync *bool `queryParam:"style=form,explode=true,name=run_async"`
}

func (o *ApplicationsCreateRequest) GetApplicationEndpointRequest() shared.ApplicationEndpointRequest {
	if o == nil {
		return shared.ApplicationEndpointRequest{}
	}
	return o.ApplicationEndpointRequest
}

func (o *ApplicationsCreateRequest) GetXAccountToken() string {
	if o == nil {
		return ""
	}
	return o.XAccountToken
}

func (o *ApplicationsCreateRequest) GetIsDebugMode() *bool {
	if o == nil {
		return nil
	}
	return o.IsDebugMode
}

func (o *ApplicationsCreateRequest) GetRunAsync() *bool {
	if o == nil {
		return nil
	}
	return o.RunAsync
}

type ApplicationsCreateResponse struct {
	ApplicationResponse *shared.ApplicationResponse
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
}

func (o *ApplicationsCreateResponse) GetApplicationResponse() *shared.ApplicationResponse {
	if o == nil {
		return nil
	}
	return o.ApplicationResponse
}

func (o *ApplicationsCreateResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *ApplicationsCreateResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *ApplicationsCreateResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}
