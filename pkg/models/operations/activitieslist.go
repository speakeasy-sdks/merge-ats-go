// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"github.com/speakeasy-sdks/merge-ats-go/pkg/models/shared"
	"github.com/speakeasy-sdks/merge-ats-go/pkg/types"
	"github.com/speakeasy-sdks/merge-ats-go/pkg/utils"
	"net/http"
	"time"
)

// ActivitiesListRemoteFields - Deprecated. Use show_enum_origins.
type ActivitiesListRemoteFields string

const (
	ActivitiesListRemoteFieldsActivityType           ActivitiesListRemoteFields = "activity_type"
	ActivitiesListRemoteFieldsActivityTypeVisibility ActivitiesListRemoteFields = "activity_type,visibility"
	ActivitiesListRemoteFieldsVisibility             ActivitiesListRemoteFields = "visibility"
)

func (e ActivitiesListRemoteFields) ToPointer() *ActivitiesListRemoteFields {
	return &e
}

func (e *ActivitiesListRemoteFields) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "activity_type":
		fallthrough
	case "activity_type,visibility":
		fallthrough
	case "visibility":
		*e = ActivitiesListRemoteFields(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ActivitiesListRemoteFields: %v", v)
	}
}

// ActivitiesListShowEnumOrigins - Which fields should be returned in non-normalized form.
type ActivitiesListShowEnumOrigins string

const (
	ActivitiesListShowEnumOriginsActivityType           ActivitiesListShowEnumOrigins = "activity_type"
	ActivitiesListShowEnumOriginsActivityTypeVisibility ActivitiesListShowEnumOrigins = "activity_type,visibility"
	ActivitiesListShowEnumOriginsVisibility             ActivitiesListShowEnumOrigins = "visibility"
)

func (e ActivitiesListShowEnumOrigins) ToPointer() *ActivitiesListShowEnumOrigins {
	return &e
}

func (e *ActivitiesListShowEnumOrigins) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "activity_type":
		fallthrough
	case "activity_type,visibility":
		fallthrough
	case "visibility":
		*e = ActivitiesListShowEnumOrigins(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ActivitiesListShowEnumOrigins: %v", v)
	}
}

type ActivitiesListRequest struct {
	// Token identifying the end user.
	XAccountToken string `header:"style=simple,explode=false,name=X-Account-Token"`
	// If provided, will only return objects created after this datetime.
	CreatedAfter *time.Time `queryParam:"style=form,explode=true,name=created_after"`
	// If provided, will only return objects created before this datetime.
	CreatedBefore *time.Time `queryParam:"style=form,explode=true,name=created_before"`
	// The pagination cursor value.
	Cursor *string `queryParam:"style=form,explode=true,name=cursor"`
	// Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces.
	expand *string `const:"user" queryParam:"style=form,explode=true,name=expand"`
	// Whether to include data that was marked as deleted by third party webhooks.
	IncludeDeletedData *bool `queryParam:"style=form,explode=true,name=include_deleted_data"`
	// Whether to include the original data Merge fetched from the third-party to produce these models.
	IncludeRemoteData *bool `queryParam:"style=form,explode=true,name=include_remote_data"`
	// If provided, only objects synced by Merge after this date time will be returned.
	ModifiedAfter *time.Time `queryParam:"style=form,explode=true,name=modified_after"`
	// If provided, only objects synced by Merge before this date time will be returned.
	ModifiedBefore *time.Time `queryParam:"style=form,explode=true,name=modified_before"`
	// Number of results to return per page.
	PageSize *int64 `queryParam:"style=form,explode=true,name=page_size"`
	// Deprecated. Use show_enum_origins.
	RemoteFields *ActivitiesListRemoteFields `queryParam:"style=form,explode=true,name=remote_fields"`
	// The API provider's ID for the given object.
	RemoteID *string `queryParam:"style=form,explode=true,name=remote_id"`
	// Which fields should be returned in non-normalized form.
	ShowEnumOrigins *ActivitiesListShowEnumOrigins `queryParam:"style=form,explode=true,name=show_enum_origins"`
	// If provided, will only return activities done by this user.
	UserID *string `queryParam:"style=form,explode=true,name=user_id"`
}

func (a ActivitiesListRequest) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(a, "", false)
}

func (a *ActivitiesListRequest) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &a, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *ActivitiesListRequest) GetXAccountToken() string {
	if o == nil {
		return ""
	}
	return o.XAccountToken
}

func (o *ActivitiesListRequest) GetCreatedAfter() *time.Time {
	if o == nil {
		return nil
	}
	return o.CreatedAfter
}

func (o *ActivitiesListRequest) GetCreatedBefore() *time.Time {
	if o == nil {
		return nil
	}
	return o.CreatedBefore
}

func (o *ActivitiesListRequest) GetCursor() *string {
	if o == nil {
		return nil
	}
	return o.Cursor
}

func (o *ActivitiesListRequest) GetExpand() *string {
	return types.String("user")
}

func (o *ActivitiesListRequest) GetIncludeDeletedData() *bool {
	if o == nil {
		return nil
	}
	return o.IncludeDeletedData
}

func (o *ActivitiesListRequest) GetIncludeRemoteData() *bool {
	if o == nil {
		return nil
	}
	return o.IncludeRemoteData
}

func (o *ActivitiesListRequest) GetModifiedAfter() *time.Time {
	if o == nil {
		return nil
	}
	return o.ModifiedAfter
}

func (o *ActivitiesListRequest) GetModifiedBefore() *time.Time {
	if o == nil {
		return nil
	}
	return o.ModifiedBefore
}

func (o *ActivitiesListRequest) GetPageSize() *int64 {
	if o == nil {
		return nil
	}
	return o.PageSize
}

func (o *ActivitiesListRequest) GetRemoteFields() *ActivitiesListRemoteFields {
	if o == nil {
		return nil
	}
	return o.RemoteFields
}

func (o *ActivitiesListRequest) GetRemoteID() *string {
	if o == nil {
		return nil
	}
	return o.RemoteID
}

func (o *ActivitiesListRequest) GetShowEnumOrigins() *ActivitiesListShowEnumOrigins {
	if o == nil {
		return nil
	}
	return o.ShowEnumOrigins
}

func (o *ActivitiesListRequest) GetUserID() *string {
	if o == nil {
		return nil
	}
	return o.UserID
}

type ActivitiesListResponse struct {
	ContentType           string
	PaginatedActivityList *shared.PaginatedActivityList
	StatusCode            int
	RawResponse           *http.Response
}

func (o *ActivitiesListResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *ActivitiesListResponse) GetPaginatedActivityList() *shared.PaginatedActivityList {
	if o == nil {
		return nil
	}
	return o.PaginatedActivityList
}

func (o *ActivitiesListResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *ActivitiesListResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}
