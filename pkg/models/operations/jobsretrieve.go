// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"github.com/speakeasy-sdks/merge-ats-go/pkg/models/shared"
	"net/http"
)

type JobsRetrieveSecurity struct {
	TokenAuth string `security:"scheme,type=apiKey,subtype=header,name=Authorization"`
}

func (o *JobsRetrieveSecurity) GetTokenAuth() string {
	if o == nil {
		return ""
	}
	return o.TokenAuth
}

// JobsRetrieveExpand - Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces.
type JobsRetrieveExpand string

const (
	JobsRetrieveExpandDepartments                                JobsRetrieveExpand = "departments"
	JobsRetrieveExpandDepartmentsHiringManagers                  JobsRetrieveExpand = "departments,hiring_managers"
	JobsRetrieveExpandDepartmentsHiringManagersRecruiters        JobsRetrieveExpand = "departments,hiring_managers,recruiters"
	JobsRetrieveExpandDepartmentsOffices                         JobsRetrieveExpand = "departments,offices"
	JobsRetrieveExpandDepartmentsOfficesHiringManagers           JobsRetrieveExpand = "departments,offices,hiring_managers"
	JobsRetrieveExpandDepartmentsOfficesHiringManagersRecruiters JobsRetrieveExpand = "departments,offices,hiring_managers,recruiters"
	JobsRetrieveExpandDepartmentsOfficesRecruiters               JobsRetrieveExpand = "departments,offices,recruiters"
	JobsRetrieveExpandDepartmentsRecruiters                      JobsRetrieveExpand = "departments,recruiters"
	JobsRetrieveExpandHiringManagers                             JobsRetrieveExpand = "hiring_managers"
	JobsRetrieveExpandHiringManagersRecruiters                   JobsRetrieveExpand = "hiring_managers,recruiters"
	JobsRetrieveExpandOffices                                    JobsRetrieveExpand = "offices"
	JobsRetrieveExpandOfficesHiringManagers                      JobsRetrieveExpand = "offices,hiring_managers"
	JobsRetrieveExpandOfficesHiringManagersRecruiters            JobsRetrieveExpand = "offices,hiring_managers,recruiters"
	JobsRetrieveExpandOfficesRecruiters                          JobsRetrieveExpand = "offices,recruiters"
	JobsRetrieveExpandRecruiters                                 JobsRetrieveExpand = "recruiters"
)

func (e JobsRetrieveExpand) ToPointer() *JobsRetrieveExpand {
	return &e
}

func (e *JobsRetrieveExpand) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "departments":
		fallthrough
	case "departments,hiring_managers":
		fallthrough
	case "departments,hiring_managers,recruiters":
		fallthrough
	case "departments,offices":
		fallthrough
	case "departments,offices,hiring_managers":
		fallthrough
	case "departments,offices,hiring_managers,recruiters":
		fallthrough
	case "departments,offices,recruiters":
		fallthrough
	case "departments,recruiters":
		fallthrough
	case "hiring_managers":
		fallthrough
	case "hiring_managers,recruiters":
		fallthrough
	case "offices":
		fallthrough
	case "offices,hiring_managers":
		fallthrough
	case "offices,hiring_managers,recruiters":
		fallthrough
	case "offices,recruiters":
		fallthrough
	case "recruiters":
		*e = JobsRetrieveExpand(v)
		return nil
	default:
		return fmt.Errorf("invalid value for JobsRetrieveExpand: %v", v)
	}
}

// JobsRetrieveRemoteFields - Deprecated. Use show_enum_origins.
type JobsRetrieveRemoteFields string

const (
	JobsRetrieveRemoteFieldsStatus JobsRetrieveRemoteFields = "status"
)

func (e JobsRetrieveRemoteFields) ToPointer() *JobsRetrieveRemoteFields {
	return &e
}

func (e *JobsRetrieveRemoteFields) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "status":
		*e = JobsRetrieveRemoteFields(v)
		return nil
	default:
		return fmt.Errorf("invalid value for JobsRetrieveRemoteFields: %v", v)
	}
}

// JobsRetrieveShowEnumOrigins - Which fields should be returned in non-normalized form.
type JobsRetrieveShowEnumOrigins string

const (
	JobsRetrieveShowEnumOriginsStatus JobsRetrieveShowEnumOrigins = "status"
)

func (e JobsRetrieveShowEnumOrigins) ToPointer() *JobsRetrieveShowEnumOrigins {
	return &e
}

func (e *JobsRetrieveShowEnumOrigins) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "status":
		*e = JobsRetrieveShowEnumOrigins(v)
		return nil
	default:
		return fmt.Errorf("invalid value for JobsRetrieveShowEnumOrigins: %v", v)
	}
}

type JobsRetrieveRequest struct {
	// Token identifying the end user.
	XAccountToken string `header:"style=simple,explode=false,name=X-Account-Token"`
	// Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces.
	Expand *JobsRetrieveExpand `queryParam:"style=form,explode=true,name=expand"`
	ID     string              `pathParam:"style=simple,explode=false,name=id"`
	// Whether to include the original data Merge fetched from the third-party to produce these models.
	IncludeRemoteData *bool `queryParam:"style=form,explode=true,name=include_remote_data"`
	// Deprecated. Use show_enum_origins.
	RemoteFields *JobsRetrieveRemoteFields `queryParam:"style=form,explode=true,name=remote_fields"`
	// Which fields should be returned in non-normalized form.
	ShowEnumOrigins *JobsRetrieveShowEnumOrigins `queryParam:"style=form,explode=true,name=show_enum_origins"`
}

func (o *JobsRetrieveRequest) GetXAccountToken() string {
	if o == nil {
		return ""
	}
	return o.XAccountToken
}

func (o *JobsRetrieveRequest) GetExpand() *JobsRetrieveExpand {
	if o == nil {
		return nil
	}
	return o.Expand
}

func (o *JobsRetrieveRequest) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *JobsRetrieveRequest) GetIncludeRemoteData() *bool {
	if o == nil {
		return nil
	}
	return o.IncludeRemoteData
}

func (o *JobsRetrieveRequest) GetRemoteFields() *JobsRetrieveRemoteFields {
	if o == nil {
		return nil
	}
	return o.RemoteFields
}

func (o *JobsRetrieveRequest) GetShowEnumOrigins() *JobsRetrieveShowEnumOrigins {
	if o == nil {
		return nil
	}
	return o.ShowEnumOrigins
}

type JobsRetrieveResponse struct {
	ContentType string
	Job         *shared.Job
	StatusCode  int
	RawResponse *http.Response
}

func (o *JobsRetrieveResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *JobsRetrieveResponse) GetJob() *shared.Job {
	if o == nil {
		return nil
	}
	return o.Job
}

func (o *JobsRetrieveResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *JobsRetrieveResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}
