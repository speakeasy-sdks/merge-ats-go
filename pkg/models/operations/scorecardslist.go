// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"github.com/speakeasy-sdks/merge-ats-go/pkg/models/shared"
	"github.com/speakeasy-sdks/merge-ats-go/pkg/types"
	"github.com/speakeasy-sdks/merge-ats-go/pkg/utils"
	"net/http"
	"time"
)

// ScorecardsListExpand - Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces.
type ScorecardsListExpand string

const (
	ScorecardsListExpandApplication                     ScorecardsListExpand = "application"
	ScorecardsListExpandApplicationInterview            ScorecardsListExpand = "application,interview"
	ScorecardsListExpandApplicationInterviewInterviewer ScorecardsListExpand = "application,interview,interviewer"
	ScorecardsListExpandApplicationInterviewer          ScorecardsListExpand = "application,interviewer"
	ScorecardsListExpandInterview                       ScorecardsListExpand = "interview"
	ScorecardsListExpandInterviewInterviewer            ScorecardsListExpand = "interview,interviewer"
	ScorecardsListExpandInterviewer                     ScorecardsListExpand = "interviewer"
)

func (e ScorecardsListExpand) ToPointer() *ScorecardsListExpand {
	return &e
}

func (e *ScorecardsListExpand) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "application":
		fallthrough
	case "application,interview":
		fallthrough
	case "application,interview,interviewer":
		fallthrough
	case "application,interviewer":
		fallthrough
	case "interview":
		fallthrough
	case "interview,interviewer":
		fallthrough
	case "interviewer":
		*e = ScorecardsListExpand(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ScorecardsListExpand: %v", v)
	}
}

type ScorecardsListRequest struct {
	// Token identifying the end user.
	XAccountToken string `header:"style=simple,explode=false,name=X-Account-Token"`
	// If provided, will only return scorecards for this application.
	ApplicationID *string `queryParam:"style=form,explode=true,name=application_id"`
	// If provided, will only return objects created after this datetime.
	CreatedAfter *time.Time `queryParam:"style=form,explode=true,name=created_after"`
	// If provided, will only return objects created before this datetime.
	CreatedBefore *time.Time `queryParam:"style=form,explode=true,name=created_before"`
	// The pagination cursor value.
	Cursor *string `queryParam:"style=form,explode=true,name=cursor"`
	// Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces.
	Expand *ScorecardsListExpand `queryParam:"style=form,explode=true,name=expand"`
	// Whether to include data that was marked as deleted by third party webhooks.
	IncludeDeletedData *bool `queryParam:"style=form,explode=true,name=include_deleted_data"`
	// Whether to include the original data Merge fetched from the third-party to produce these models.
	IncludeRemoteData *bool `queryParam:"style=form,explode=true,name=include_remote_data"`
	// If provided, will only return scorecards for this interview.
	InterviewID *string `queryParam:"style=form,explode=true,name=interview_id"`
	// If provided, will only return scorecards for this interviewer.
	InterviewerID *string `queryParam:"style=form,explode=true,name=interviewer_id"`
	// If provided, only objects synced by Merge after this date time will be returned.
	ModifiedAfter *time.Time `queryParam:"style=form,explode=true,name=modified_after"`
	// If provided, only objects synced by Merge before this date time will be returned.
	ModifiedBefore *time.Time `queryParam:"style=form,explode=true,name=modified_before"`
	// Number of results to return per page.
	PageSize *int64 `queryParam:"style=form,explode=true,name=page_size"`
	// Deprecated. Use show_enum_origins.
	remoteFields *string `const:"overall_recommendation" queryParam:"style=form,explode=true,name=remote_fields"`
	// The API provider's ID for the given object.
	RemoteID *string `queryParam:"style=form,explode=true,name=remote_id"`
	// Which fields should be returned in non-normalized form.
	showEnumOrigins *string `const:"overall_recommendation" queryParam:"style=form,explode=true,name=show_enum_origins"`
}

func (s ScorecardsListRequest) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(s, "", false)
}

func (s *ScorecardsListRequest) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &s, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *ScorecardsListRequest) GetXAccountToken() string {
	if o == nil {
		return ""
	}
	return o.XAccountToken
}

func (o *ScorecardsListRequest) GetApplicationID() *string {
	if o == nil {
		return nil
	}
	return o.ApplicationID
}

func (o *ScorecardsListRequest) GetCreatedAfter() *time.Time {
	if o == nil {
		return nil
	}
	return o.CreatedAfter
}

func (o *ScorecardsListRequest) GetCreatedBefore() *time.Time {
	if o == nil {
		return nil
	}
	return o.CreatedBefore
}

func (o *ScorecardsListRequest) GetCursor() *string {
	if o == nil {
		return nil
	}
	return o.Cursor
}

func (o *ScorecardsListRequest) GetExpand() *ScorecardsListExpand {
	if o == nil {
		return nil
	}
	return o.Expand
}

func (o *ScorecardsListRequest) GetIncludeDeletedData() *bool {
	if o == nil {
		return nil
	}
	return o.IncludeDeletedData
}

func (o *ScorecardsListRequest) GetIncludeRemoteData() *bool {
	if o == nil {
		return nil
	}
	return o.IncludeRemoteData
}

func (o *ScorecardsListRequest) GetInterviewID() *string {
	if o == nil {
		return nil
	}
	return o.InterviewID
}

func (o *ScorecardsListRequest) GetInterviewerID() *string {
	if o == nil {
		return nil
	}
	return o.InterviewerID
}

func (o *ScorecardsListRequest) GetModifiedAfter() *time.Time {
	if o == nil {
		return nil
	}
	return o.ModifiedAfter
}

func (o *ScorecardsListRequest) GetModifiedBefore() *time.Time {
	if o == nil {
		return nil
	}
	return o.ModifiedBefore
}

func (o *ScorecardsListRequest) GetPageSize() *int64 {
	if o == nil {
		return nil
	}
	return o.PageSize
}

func (o *ScorecardsListRequest) GetRemoteFields() *string {
	return types.String("overall_recommendation")
}

func (o *ScorecardsListRequest) GetRemoteID() *string {
	if o == nil {
		return nil
	}
	return o.RemoteID
}

func (o *ScorecardsListRequest) GetShowEnumOrigins() *string {
	return types.String("overall_recommendation")
}

type ScorecardsListResponse struct {
	ContentType            string
	PaginatedScorecardList *shared.PaginatedScorecardList
	StatusCode             int
	RawResponse            *http.Response
}

func (o *ScorecardsListResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *ScorecardsListResponse) GetPaginatedScorecardList() *shared.PaginatedScorecardList {
	if o == nil {
		return nil
	}
	return o.PaginatedScorecardList
}

func (o *ScorecardsListResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *ScorecardsListResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}
