// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"github.com/speakeasy-sdks/merge-ats-go/pkg/models/shared"
	"net/http"
)

// ApplicationsRetrieveQueryParamExpand - Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces.
type ApplicationsRetrieveQueryParamExpand string

const (
	ApplicationsRetrieveQueryParamExpandCandidate                                      ApplicationsRetrieveQueryParamExpand = "candidate"
	ApplicationsRetrieveQueryParamExpandCandidateCreditedTo                            ApplicationsRetrieveQueryParamExpand = "candidate,credited_to"
	ApplicationsRetrieveQueryParamExpandCandidateCreditedToCurrentStage                ApplicationsRetrieveQueryParamExpand = "candidate,credited_to,current_stage"
	ApplicationsRetrieveQueryParamExpandCandidateCreditedToCurrentStageRejectReason    ApplicationsRetrieveQueryParamExpand = "candidate,credited_to,current_stage,reject_reason"
	ApplicationsRetrieveQueryParamExpandCandidateCreditedToRejectReason                ApplicationsRetrieveQueryParamExpand = "candidate,credited_to,reject_reason"
	ApplicationsRetrieveQueryParamExpandCandidateCurrentStage                          ApplicationsRetrieveQueryParamExpand = "candidate,current_stage"
	ApplicationsRetrieveQueryParamExpandCandidateCurrentStageRejectReason              ApplicationsRetrieveQueryParamExpand = "candidate,current_stage,reject_reason"
	ApplicationsRetrieveQueryParamExpandCandidateJob                                   ApplicationsRetrieveQueryParamExpand = "candidate,job"
	ApplicationsRetrieveQueryParamExpandCandidateJobCreditedTo                         ApplicationsRetrieveQueryParamExpand = "candidate,job,credited_to"
	ApplicationsRetrieveQueryParamExpandCandidateJobCreditedToCurrentStage             ApplicationsRetrieveQueryParamExpand = "candidate,job,credited_to,current_stage"
	ApplicationsRetrieveQueryParamExpandCandidateJobCreditedToCurrentStageRejectReason ApplicationsRetrieveQueryParamExpand = "candidate,job,credited_to,current_stage,reject_reason"
	ApplicationsRetrieveQueryParamExpandCandidateJobCreditedToRejectReason             ApplicationsRetrieveQueryParamExpand = "candidate,job,credited_to,reject_reason"
	ApplicationsRetrieveQueryParamExpandCandidateJobCurrentStage                       ApplicationsRetrieveQueryParamExpand = "candidate,job,current_stage"
	ApplicationsRetrieveQueryParamExpandCandidateJobCurrentStageRejectReason           ApplicationsRetrieveQueryParamExpand = "candidate,job,current_stage,reject_reason"
	ApplicationsRetrieveQueryParamExpandCandidateJobRejectReason                       ApplicationsRetrieveQueryParamExpand = "candidate,job,reject_reason"
	ApplicationsRetrieveQueryParamExpandCandidateRejectReason                          ApplicationsRetrieveQueryParamExpand = "candidate,reject_reason"
	ApplicationsRetrieveQueryParamExpandCreditedTo                                     ApplicationsRetrieveQueryParamExpand = "credited_to"
	ApplicationsRetrieveQueryParamExpandCreditedToCurrentStage                         ApplicationsRetrieveQueryParamExpand = "credited_to,current_stage"
	ApplicationsRetrieveQueryParamExpandCreditedToCurrentStageRejectReason             ApplicationsRetrieveQueryParamExpand = "credited_to,current_stage,reject_reason"
	ApplicationsRetrieveQueryParamExpandCreditedToRejectReason                         ApplicationsRetrieveQueryParamExpand = "credited_to,reject_reason"
	ApplicationsRetrieveQueryParamExpandCurrentStage                                   ApplicationsRetrieveQueryParamExpand = "current_stage"
	ApplicationsRetrieveQueryParamExpandCurrentStageRejectReason                       ApplicationsRetrieveQueryParamExpand = "current_stage,reject_reason"
	ApplicationsRetrieveQueryParamExpandJob                                            ApplicationsRetrieveQueryParamExpand = "job"
	ApplicationsRetrieveQueryParamExpandJobCreditedTo                                  ApplicationsRetrieveQueryParamExpand = "job,credited_to"
	ApplicationsRetrieveQueryParamExpandJobCreditedToCurrentStage                      ApplicationsRetrieveQueryParamExpand = "job,credited_to,current_stage"
	ApplicationsRetrieveQueryParamExpandJobCreditedToCurrentStageRejectReason          ApplicationsRetrieveQueryParamExpand = "job,credited_to,current_stage,reject_reason"
	ApplicationsRetrieveQueryParamExpandJobCreditedToRejectReason                      ApplicationsRetrieveQueryParamExpand = "job,credited_to,reject_reason"
	ApplicationsRetrieveQueryParamExpandJobCurrentStage                                ApplicationsRetrieveQueryParamExpand = "job,current_stage"
	ApplicationsRetrieveQueryParamExpandJobCurrentStageRejectReason                    ApplicationsRetrieveQueryParamExpand = "job,current_stage,reject_reason"
	ApplicationsRetrieveQueryParamExpandJobRejectReason                                ApplicationsRetrieveQueryParamExpand = "job,reject_reason"
	ApplicationsRetrieveQueryParamExpandRejectReason                                   ApplicationsRetrieveQueryParamExpand = "reject_reason"
)

func (e ApplicationsRetrieveQueryParamExpand) ToPointer() *ApplicationsRetrieveQueryParamExpand {
	return &e
}

func (e *ApplicationsRetrieveQueryParamExpand) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "candidate":
		fallthrough
	case "candidate,credited_to":
		fallthrough
	case "candidate,credited_to,current_stage":
		fallthrough
	case "candidate,credited_to,current_stage,reject_reason":
		fallthrough
	case "candidate,credited_to,reject_reason":
		fallthrough
	case "candidate,current_stage":
		fallthrough
	case "candidate,current_stage,reject_reason":
		fallthrough
	case "candidate,job":
		fallthrough
	case "candidate,job,credited_to":
		fallthrough
	case "candidate,job,credited_to,current_stage":
		fallthrough
	case "candidate,job,credited_to,current_stage,reject_reason":
		fallthrough
	case "candidate,job,credited_to,reject_reason":
		fallthrough
	case "candidate,job,current_stage":
		fallthrough
	case "candidate,job,current_stage,reject_reason":
		fallthrough
	case "candidate,job,reject_reason":
		fallthrough
	case "candidate,reject_reason":
		fallthrough
	case "credited_to":
		fallthrough
	case "credited_to,current_stage":
		fallthrough
	case "credited_to,current_stage,reject_reason":
		fallthrough
	case "credited_to,reject_reason":
		fallthrough
	case "current_stage":
		fallthrough
	case "current_stage,reject_reason":
		fallthrough
	case "job":
		fallthrough
	case "job,credited_to":
		fallthrough
	case "job,credited_to,current_stage":
		fallthrough
	case "job,credited_to,current_stage,reject_reason":
		fallthrough
	case "job,credited_to,reject_reason":
		fallthrough
	case "job,current_stage":
		fallthrough
	case "job,current_stage,reject_reason":
		fallthrough
	case "job,reject_reason":
		fallthrough
	case "reject_reason":
		*e = ApplicationsRetrieveQueryParamExpand(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ApplicationsRetrieveQueryParamExpand: %v", v)
	}
}

type ApplicationsRetrieveRequest struct {
	// Token identifying the end user.
	XAccountToken string `header:"style=simple,explode=false,name=X-Account-Token"`
	ID            string `pathParam:"style=simple,explode=false,name=id"`
	// Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces.
	Expand *ApplicationsRetrieveQueryParamExpand `queryParam:"style=form,explode=true,name=expand"`
	// Whether to include the original data Merge fetched from the third-party to produce these models.
	IncludeRemoteData *bool `queryParam:"style=form,explode=true,name=include_remote_data"`
}

func (o *ApplicationsRetrieveRequest) GetXAccountToken() string {
	if o == nil {
		return ""
	}
	return o.XAccountToken
}

func (o *ApplicationsRetrieveRequest) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *ApplicationsRetrieveRequest) GetExpand() *ApplicationsRetrieveQueryParamExpand {
	if o == nil {
		return nil
	}
	return o.Expand
}

func (o *ApplicationsRetrieveRequest) GetIncludeRemoteData() *bool {
	if o == nil {
		return nil
	}
	return o.IncludeRemoteData
}

type ApplicationsRetrieveResponse struct {
	Application *shared.Application
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
}

func (o *ApplicationsRetrieveResponse) GetApplication() *shared.Application {
	if o == nil {
		return nil
	}
	return o.Application
}

func (o *ApplicationsRetrieveResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *ApplicationsRetrieveResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *ApplicationsRetrieveResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}
