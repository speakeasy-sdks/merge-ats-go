// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"github.com/speakeasy-sdks/merge-ats-go/pkg/models/shared"
	"net/http"
)

type PassthroughCreateFormSecurity struct {
	TokenAuth string `security:"scheme,type=apiKey,subtype=header,name=Authorization"`
}

func (o *PassthroughCreateFormSecurity) GetTokenAuth() string {
	if o == nil {
		return ""
	}
	return o.TokenAuth
}

type PassthroughCreateFormRequest struct {
	DataPassthroughRequest3 shared.DataPassthroughRequest3 `request:"mediaType=application/x-www-form-urlencoded"`
	// Token identifying the end user.
	XAccountToken string `header:"style=simple,explode=false,name=X-Account-Token"`
}

func (o *PassthroughCreateFormRequest) GetDataPassthroughRequest3() shared.DataPassthroughRequest3 {
	if o == nil {
		return shared.DataPassthroughRequest3{}
	}
	return o.DataPassthroughRequest3
}

func (o *PassthroughCreateFormRequest) GetXAccountToken() string {
	if o == nil {
		return ""
	}
	return o.XAccountToken
}

type PassthroughCreateFormResponse struct {
	ContentType    string
	RemoteResponse *shared.RemoteResponse
	StatusCode     int
	RawResponse    *http.Response
}

func (o *PassthroughCreateFormResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *PassthroughCreateFormResponse) GetRemoteResponse() *shared.RemoteResponse {
	if o == nil {
		return nil
	}
	return o.RemoteResponse
}

func (o *PassthroughCreateFormResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *PassthroughCreateFormResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}
