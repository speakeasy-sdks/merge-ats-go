// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"github.com/speakeasy-sdks/merge-ats-go/pkg/models/shared"
	"net/http"
)

// UsersRetrieveQueryParamRemoteFields - Deprecated. Use show_enum_origins.
type UsersRetrieveQueryParamRemoteFields string

const (
	UsersRetrieveQueryParamRemoteFieldsAccessRole UsersRetrieveQueryParamRemoteFields = "access_role"
)

func (e UsersRetrieveQueryParamRemoteFields) ToPointer() *UsersRetrieveQueryParamRemoteFields {
	return &e
}

func (e *UsersRetrieveQueryParamRemoteFields) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "access_role":
		*e = UsersRetrieveQueryParamRemoteFields(v)
		return nil
	default:
		return fmt.Errorf("invalid value for UsersRetrieveQueryParamRemoteFields: %v", v)
	}
}

// UsersRetrieveQueryParamShowEnumOrigins - Which fields should be returned in non-normalized form.
type UsersRetrieveQueryParamShowEnumOrigins string

const (
	UsersRetrieveQueryParamShowEnumOriginsAccessRole UsersRetrieveQueryParamShowEnumOrigins = "access_role"
)

func (e UsersRetrieveQueryParamShowEnumOrigins) ToPointer() *UsersRetrieveQueryParamShowEnumOrigins {
	return &e
}

func (e *UsersRetrieveQueryParamShowEnumOrigins) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "access_role":
		*e = UsersRetrieveQueryParamShowEnumOrigins(v)
		return nil
	default:
		return fmt.Errorf("invalid value for UsersRetrieveQueryParamShowEnumOrigins: %v", v)
	}
}

type UsersRetrieveRequest struct {
	// Token identifying the end user.
	XAccountToken string `header:"style=simple,explode=false,name=X-Account-Token"`
	ID            string `pathParam:"style=simple,explode=false,name=id"`
	// Whether to include the original data Merge fetched from the third-party to produce these models.
	IncludeRemoteData *bool `queryParam:"style=form,explode=true,name=include_remote_data"`
	// Deprecated. Use show_enum_origins.
	RemoteFields *UsersRetrieveQueryParamRemoteFields `queryParam:"style=form,explode=true,name=remote_fields"`
	// Which fields should be returned in non-normalized form.
	ShowEnumOrigins *UsersRetrieveQueryParamShowEnumOrigins `queryParam:"style=form,explode=true,name=show_enum_origins"`
}

func (o *UsersRetrieveRequest) GetXAccountToken() string {
	if o == nil {
		return ""
	}
	return o.XAccountToken
}

func (o *UsersRetrieveRequest) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *UsersRetrieveRequest) GetIncludeRemoteData() *bool {
	if o == nil {
		return nil
	}
	return o.IncludeRemoteData
}

func (o *UsersRetrieveRequest) GetRemoteFields() *UsersRetrieveQueryParamRemoteFields {
	if o == nil {
		return nil
	}
	return o.RemoteFields
}

func (o *UsersRetrieveRequest) GetShowEnumOrigins() *UsersRetrieveQueryParamShowEnumOrigins {
	if o == nil {
		return nil
	}
	return o.ShowEnumOrigins
}

type UsersRetrieveResponse struct {
	// HTTP response content type for this operation
	ContentType string
	RemoteUser  *shared.RemoteUser
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
}

func (o *UsersRetrieveResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *UsersRetrieveResponse) GetRemoteUser() *shared.RemoteUser {
	if o == nil {
		return nil
	}
	return o.RemoteUser
}

func (o *UsersRetrieveResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *UsersRetrieveResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}
