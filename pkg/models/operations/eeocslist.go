// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"github.com/speakeasy-sdks/merge-ats-go/pkg/models/shared"
	"net/http"
	"time"
)

type EeocsListSecurity struct {
	TokenAuth string `security:"scheme,type=apiKey,subtype=header,name=Authorization"`
}

func (o *EeocsListSecurity) GetTokenAuth() string {
	if o == nil {
		return ""
	}
	return o.TokenAuth
}

// EeocsListExpand - Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces.
type EeocsListExpand string

const (
	EeocsListExpandCandidate EeocsListExpand = "candidate"
)

func (e EeocsListExpand) ToPointer() *EeocsListExpand {
	return &e
}

func (e *EeocsListExpand) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "candidate":
		*e = EeocsListExpand(v)
		return nil
	default:
		return fmt.Errorf("invalid value for EeocsListExpand: %v", v)
	}
}

// EeocsListRemoteFields - Deprecated. Use show_enum_origins.
type EeocsListRemoteFields string

const (
	EeocsListRemoteFieldsDisabilityStatus                        EeocsListRemoteFields = "disability_status"
	EeocsListRemoteFieldsDisabilityStatusGender                  EeocsListRemoteFields = "disability_status,gender"
	EeocsListRemoteFieldsDisabilityStatusGenderRace              EeocsListRemoteFields = "disability_status,gender,race"
	EeocsListRemoteFieldsDisabilityStatusGenderRaceVeteranStatus EeocsListRemoteFields = "disability_status,gender,race,veteran_status"
	EeocsListRemoteFieldsDisabilityStatusGenderVeteranStatus     EeocsListRemoteFields = "disability_status,gender,veteran_status"
	EeocsListRemoteFieldsDisabilityStatusRace                    EeocsListRemoteFields = "disability_status,race"
	EeocsListRemoteFieldsDisabilityStatusRaceVeteranStatus       EeocsListRemoteFields = "disability_status,race,veteran_status"
	EeocsListRemoteFieldsDisabilityStatusVeteranStatus           EeocsListRemoteFields = "disability_status,veteran_status"
	EeocsListRemoteFieldsGender                                  EeocsListRemoteFields = "gender"
	EeocsListRemoteFieldsGenderRace                              EeocsListRemoteFields = "gender,race"
	EeocsListRemoteFieldsGenderRaceVeteranStatus                 EeocsListRemoteFields = "gender,race,veteran_status"
	EeocsListRemoteFieldsGenderVeteranStatus                     EeocsListRemoteFields = "gender,veteran_status"
	EeocsListRemoteFieldsRace                                    EeocsListRemoteFields = "race"
	EeocsListRemoteFieldsRaceVeteranStatus                       EeocsListRemoteFields = "race,veteran_status"
	EeocsListRemoteFieldsVeteranStatus                           EeocsListRemoteFields = "veteran_status"
)

func (e EeocsListRemoteFields) ToPointer() *EeocsListRemoteFields {
	return &e
}

func (e *EeocsListRemoteFields) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "disability_status":
		fallthrough
	case "disability_status,gender":
		fallthrough
	case "disability_status,gender,race":
		fallthrough
	case "disability_status,gender,race,veteran_status":
		fallthrough
	case "disability_status,gender,veteran_status":
		fallthrough
	case "disability_status,race":
		fallthrough
	case "disability_status,race,veteran_status":
		fallthrough
	case "disability_status,veteran_status":
		fallthrough
	case "gender":
		fallthrough
	case "gender,race":
		fallthrough
	case "gender,race,veteran_status":
		fallthrough
	case "gender,veteran_status":
		fallthrough
	case "race":
		fallthrough
	case "race,veteran_status":
		fallthrough
	case "veteran_status":
		*e = EeocsListRemoteFields(v)
		return nil
	default:
		return fmt.Errorf("invalid value for EeocsListRemoteFields: %v", v)
	}
}

// EeocsListShowEnumOrigins - Which fields should be returned in non-normalized form.
type EeocsListShowEnumOrigins string

const (
	EeocsListShowEnumOriginsDisabilityStatus                        EeocsListShowEnumOrigins = "disability_status"
	EeocsListShowEnumOriginsDisabilityStatusGender                  EeocsListShowEnumOrigins = "disability_status,gender"
	EeocsListShowEnumOriginsDisabilityStatusGenderRace              EeocsListShowEnumOrigins = "disability_status,gender,race"
	EeocsListShowEnumOriginsDisabilityStatusGenderRaceVeteranStatus EeocsListShowEnumOrigins = "disability_status,gender,race,veteran_status"
	EeocsListShowEnumOriginsDisabilityStatusGenderVeteranStatus     EeocsListShowEnumOrigins = "disability_status,gender,veteran_status"
	EeocsListShowEnumOriginsDisabilityStatusRace                    EeocsListShowEnumOrigins = "disability_status,race"
	EeocsListShowEnumOriginsDisabilityStatusRaceVeteranStatus       EeocsListShowEnumOrigins = "disability_status,race,veteran_status"
	EeocsListShowEnumOriginsDisabilityStatusVeteranStatus           EeocsListShowEnumOrigins = "disability_status,veteran_status"
	EeocsListShowEnumOriginsGender                                  EeocsListShowEnumOrigins = "gender"
	EeocsListShowEnumOriginsGenderRace                              EeocsListShowEnumOrigins = "gender,race"
	EeocsListShowEnumOriginsGenderRaceVeteranStatus                 EeocsListShowEnumOrigins = "gender,race,veteran_status"
	EeocsListShowEnumOriginsGenderVeteranStatus                     EeocsListShowEnumOrigins = "gender,veteran_status"
	EeocsListShowEnumOriginsRace                                    EeocsListShowEnumOrigins = "race"
	EeocsListShowEnumOriginsRaceVeteranStatus                       EeocsListShowEnumOrigins = "race,veteran_status"
	EeocsListShowEnumOriginsVeteranStatus                           EeocsListShowEnumOrigins = "veteran_status"
)

func (e EeocsListShowEnumOrigins) ToPointer() *EeocsListShowEnumOrigins {
	return &e
}

func (e *EeocsListShowEnumOrigins) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "disability_status":
		fallthrough
	case "disability_status,gender":
		fallthrough
	case "disability_status,gender,race":
		fallthrough
	case "disability_status,gender,race,veteran_status":
		fallthrough
	case "disability_status,gender,veteran_status":
		fallthrough
	case "disability_status,race":
		fallthrough
	case "disability_status,race,veteran_status":
		fallthrough
	case "disability_status,veteran_status":
		fallthrough
	case "gender":
		fallthrough
	case "gender,race":
		fallthrough
	case "gender,race,veteran_status":
		fallthrough
	case "gender,veteran_status":
		fallthrough
	case "race":
		fallthrough
	case "race,veteran_status":
		fallthrough
	case "veteran_status":
		*e = EeocsListShowEnumOrigins(v)
		return nil
	default:
		return fmt.Errorf("invalid value for EeocsListShowEnumOrigins: %v", v)
	}
}

type EeocsListRequest struct {
	// Token identifying the end user.
	XAccountToken string `header:"style=simple,explode=false,name=X-Account-Token"`
	// If provided, will only return EEOC info for this candidate.
	CandidateID *string `queryParam:"style=form,explode=true,name=candidate_id"`
	// If provided, will only return objects created after this datetime.
	CreatedAfter *time.Time `queryParam:"style=form,explode=true,name=created_after"`
	// If provided, will only return objects created before this datetime.
	CreatedBefore *time.Time `queryParam:"style=form,explode=true,name=created_before"`
	// The pagination cursor value.
	Cursor *string `queryParam:"style=form,explode=true,name=cursor"`
	// Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces.
	Expand *EeocsListExpand `queryParam:"style=form,explode=true,name=expand"`
	// Whether to include data that was marked as deleted by third party webhooks.
	IncludeDeletedData *bool `queryParam:"style=form,explode=true,name=include_deleted_data"`
	// Whether to include the original data Merge fetched from the third-party to produce these models.
	IncludeRemoteData *bool `queryParam:"style=form,explode=true,name=include_remote_data"`
	// If provided, only objects synced by Merge after this date time will be returned.
	ModifiedAfter *time.Time `queryParam:"style=form,explode=true,name=modified_after"`
	// If provided, only objects synced by Merge before this date time will be returned.
	ModifiedBefore *time.Time `queryParam:"style=form,explode=true,name=modified_before"`
	// Number of results to return per page.
	PageSize *int64 `queryParam:"style=form,explode=true,name=page_size"`
	// Deprecated. Use show_enum_origins.
	RemoteFields *EeocsListRemoteFields `queryParam:"style=form,explode=true,name=remote_fields"`
	// The API provider's ID for the given object.
	RemoteID *string `queryParam:"style=form,explode=true,name=remote_id"`
	// Which fields should be returned in non-normalized form.
	ShowEnumOrigins *EeocsListShowEnumOrigins `queryParam:"style=form,explode=true,name=show_enum_origins"`
}

func (o *EeocsListRequest) GetXAccountToken() string {
	if o == nil {
		return ""
	}
	return o.XAccountToken
}

func (o *EeocsListRequest) GetCandidateID() *string {
	if o == nil {
		return nil
	}
	return o.CandidateID
}

func (o *EeocsListRequest) GetCreatedAfter() *time.Time {
	if o == nil {
		return nil
	}
	return o.CreatedAfter
}

func (o *EeocsListRequest) GetCreatedBefore() *time.Time {
	if o == nil {
		return nil
	}
	return o.CreatedBefore
}

func (o *EeocsListRequest) GetCursor() *string {
	if o == nil {
		return nil
	}
	return o.Cursor
}

func (o *EeocsListRequest) GetExpand() *EeocsListExpand {
	if o == nil {
		return nil
	}
	return o.Expand
}

func (o *EeocsListRequest) GetIncludeDeletedData() *bool {
	if o == nil {
		return nil
	}
	return o.IncludeDeletedData
}

func (o *EeocsListRequest) GetIncludeRemoteData() *bool {
	if o == nil {
		return nil
	}
	return o.IncludeRemoteData
}

func (o *EeocsListRequest) GetModifiedAfter() *time.Time {
	if o == nil {
		return nil
	}
	return o.ModifiedAfter
}

func (o *EeocsListRequest) GetModifiedBefore() *time.Time {
	if o == nil {
		return nil
	}
	return o.ModifiedBefore
}

func (o *EeocsListRequest) GetPageSize() *int64 {
	if o == nil {
		return nil
	}
	return o.PageSize
}

func (o *EeocsListRequest) GetRemoteFields() *EeocsListRemoteFields {
	if o == nil {
		return nil
	}
	return o.RemoteFields
}

func (o *EeocsListRequest) GetRemoteID() *string {
	if o == nil {
		return nil
	}
	return o.RemoteID
}

func (o *EeocsListRequest) GetShowEnumOrigins() *EeocsListShowEnumOrigins {
	if o == nil {
		return nil
	}
	return o.ShowEnumOrigins
}

type EeocsListResponse struct {
	ContentType       string
	PaginatedEEOCList *shared.PaginatedEEOCList
	StatusCode        int
	RawResponse       *http.Response
}

func (o *EeocsListResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *EeocsListResponse) GetPaginatedEEOCList() *shared.PaginatedEEOCList {
	if o == nil {
		return nil
	}
	return o.PaginatedEEOCList
}

func (o *EeocsListResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *EeocsListResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}
