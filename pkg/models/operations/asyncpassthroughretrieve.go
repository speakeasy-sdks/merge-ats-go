// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"github.com/speakeasy-sdks/merge-ats-go/pkg/models/shared"
	"net/http"
)

type AsyncPassthroughRetrieveSecurity struct {
	TokenAuth string `security:"scheme,type=apiKey,subtype=header,name=Authorization"`
}

func (o *AsyncPassthroughRetrieveSecurity) GetTokenAuth() string {
	if o == nil {
		return ""
	}
	return o.TokenAuth
}

type AsyncPassthroughRetrieveRequest struct {
	// Token identifying the end user.
	XAccountToken             string `header:"style=simple,explode=false,name=X-Account-Token"`
	AsyncPassthroughReceiptID string `pathParam:"style=simple,explode=false,name=async_passthrough_receipt_id"`
}

func (o *AsyncPassthroughRetrieveRequest) GetXAccountToken() string {
	if o == nil {
		return ""
	}
	return o.XAccountToken
}

func (o *AsyncPassthroughRetrieveRequest) GetAsyncPassthroughReceiptID() string {
	if o == nil {
		return ""
	}
	return o.AsyncPassthroughReceiptID
}

type AsyncPassthroughRetrieveResponse struct {
	ContentType    string
	RemoteResponse *shared.RemoteResponse
	StatusCode     int
	RawResponse    *http.Response
}

func (o *AsyncPassthroughRetrieveResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *AsyncPassthroughRetrieveResponse) GetRemoteResponse() *shared.RemoteResponse {
	if o == nil {
		return nil
	}
	return o.RemoteResponse
}

func (o *AsyncPassthroughRetrieveResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *AsyncPassthroughRetrieveResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}
