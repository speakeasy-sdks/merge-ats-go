// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"github.com/speakeasy-sdks/merge-ats-go/pkg/models/shared"
	"net/http"
)

type WebhookReceiversCreateSecurity struct {
	TokenAuth string `security:"scheme,type=apiKey,subtype=header,name=Authorization"`
}

func (o *WebhookReceiversCreateSecurity) GetTokenAuth() string {
	if o == nil {
		return ""
	}
	return o.TokenAuth
}

type WebhookReceiversCreateRequest struct {
	WebhookReceiverRequest shared.WebhookReceiverRequest `request:"mediaType=application/json"`
	// Token identifying the end user.
	XAccountToken string `header:"style=simple,explode=false,name=X-Account-Token"`
}

func (o *WebhookReceiversCreateRequest) GetWebhookReceiverRequest() shared.WebhookReceiverRequest {
	if o == nil {
		return shared.WebhookReceiverRequest{}
	}
	return o.WebhookReceiverRequest
}

func (o *WebhookReceiversCreateRequest) GetXAccountToken() string {
	if o == nil {
		return ""
	}
	return o.XAccountToken
}

type WebhookReceiversCreateResponse struct {
	ContentType     string
	StatusCode      int
	RawResponse     *http.Response
	WebhookReceiver *shared.WebhookReceiver
}

func (o *WebhookReceiversCreateResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *WebhookReceiversCreateResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *WebhookReceiversCreateResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *WebhookReceiversCreateResponse) GetWebhookReceiver() *shared.WebhookReceiver {
	if o == nil {
		return nil
	}
	return o.WebhookReceiver
}
