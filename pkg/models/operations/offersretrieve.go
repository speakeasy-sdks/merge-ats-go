// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"github.com/speakeasy-sdks/merge-ats-go/pkg/models/shared"
	"net/http"
)

// OffersRetrieveExpand - Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces.
type OffersRetrieveExpand string

const (
	OffersRetrieveExpandApplication        OffersRetrieveExpand = "application"
	OffersRetrieveExpandApplicationCreator OffersRetrieveExpand = "application,creator"
	OffersRetrieveExpandCreator            OffersRetrieveExpand = "creator"
)

func (e OffersRetrieveExpand) ToPointer() *OffersRetrieveExpand {
	return &e
}

func (e *OffersRetrieveExpand) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "application":
		fallthrough
	case "application,creator":
		fallthrough
	case "creator":
		*e = OffersRetrieveExpand(v)
		return nil
	default:
		return fmt.Errorf("invalid value for OffersRetrieveExpand: %v", v)
	}
}

// OffersRetrieveRemoteFields - Deprecated. Use show_enum_origins.
type OffersRetrieveRemoteFields string

const (
	OffersRetrieveRemoteFieldsStatus OffersRetrieveRemoteFields = "status"
)

func (e OffersRetrieveRemoteFields) ToPointer() *OffersRetrieveRemoteFields {
	return &e
}

func (e *OffersRetrieveRemoteFields) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "status":
		*e = OffersRetrieveRemoteFields(v)
		return nil
	default:
		return fmt.Errorf("invalid value for OffersRetrieveRemoteFields: %v", v)
	}
}

// OffersRetrieveShowEnumOrigins - Which fields should be returned in non-normalized form.
type OffersRetrieveShowEnumOrigins string

const (
	OffersRetrieveShowEnumOriginsStatus OffersRetrieveShowEnumOrigins = "status"
)

func (e OffersRetrieveShowEnumOrigins) ToPointer() *OffersRetrieveShowEnumOrigins {
	return &e
}

func (e *OffersRetrieveShowEnumOrigins) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "status":
		*e = OffersRetrieveShowEnumOrigins(v)
		return nil
	default:
		return fmt.Errorf("invalid value for OffersRetrieveShowEnumOrigins: %v", v)
	}
}

type OffersRetrieveRequest struct {
	// Token identifying the end user.
	XAccountToken string `header:"style=simple,explode=false,name=X-Account-Token"`
	// Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces.
	Expand *OffersRetrieveExpand `queryParam:"style=form,explode=true,name=expand"`
	ID     string                `pathParam:"style=simple,explode=false,name=id"`
	// Whether to include the original data Merge fetched from the third-party to produce these models.
	IncludeRemoteData *bool `queryParam:"style=form,explode=true,name=include_remote_data"`
	// Deprecated. Use show_enum_origins.
	RemoteFields *OffersRetrieveRemoteFields `queryParam:"style=form,explode=true,name=remote_fields"`
	// Which fields should be returned in non-normalized form.
	ShowEnumOrigins *OffersRetrieveShowEnumOrigins `queryParam:"style=form,explode=true,name=show_enum_origins"`
}

func (o *OffersRetrieveRequest) GetXAccountToken() string {
	if o == nil {
		return ""
	}
	return o.XAccountToken
}

func (o *OffersRetrieveRequest) GetExpand() *OffersRetrieveExpand {
	if o == nil {
		return nil
	}
	return o.Expand
}

func (o *OffersRetrieveRequest) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *OffersRetrieveRequest) GetIncludeRemoteData() *bool {
	if o == nil {
		return nil
	}
	return o.IncludeRemoteData
}

func (o *OffersRetrieveRequest) GetRemoteFields() *OffersRetrieveRemoteFields {
	if o == nil {
		return nil
	}
	return o.RemoteFields
}

func (o *OffersRetrieveRequest) GetShowEnumOrigins() *OffersRetrieveShowEnumOrigins {
	if o == nil {
		return nil
	}
	return o.ShowEnumOrigins
}

type OffersRetrieveResponse struct {
	// HTTP response content type for this operation
	ContentType string
	Offer       *shared.Offer
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
}

func (o *OffersRetrieveResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *OffersRetrieveResponse) GetOffer() *shared.Offer {
	if o == nil {
		return nil
	}
	return o.Offer
}

func (o *OffersRetrieveResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *OffersRetrieveResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}
