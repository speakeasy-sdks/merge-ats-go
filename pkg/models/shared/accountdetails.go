// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// Category - * `hris` - hris
// * `ats` - ats
// * `accounting` - accounting
// * `ticketing` - ticketing
// * `crm` - crm
// * `mktg` - mktg
// * `filestorage` - filestorage
type Category string

const (
	CategoryHris        Category = "hris"
	CategoryAts         Category = "ats"
	CategoryAccounting  Category = "accounting"
	CategoryTicketing   Category = "ticketing"
	CategoryCrm         Category = "crm"
	CategoryMktg        Category = "mktg"
	CategoryFilestorage Category = "filestorage"
)

func (e Category) ToPointer() *Category {
	return &e
}

func (e *Category) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "hris":
		fallthrough
	case "ats":
		fallthrough
	case "accounting":
		fallthrough
	case "ticketing":
		fallthrough
	case "crm":
		fallthrough
	case "mktg":
		fallthrough
	case "filestorage":
		*e = Category(v)
		return nil
	default:
		return fmt.Errorf("invalid value for Category: %v", v)
	}
}

type AccountDetails struct {
	Category                *Category `json:"category,omitempty"`
	EndUserEmailAddress     *string   `json:"end_user_email_address,omitempty"`
	EndUserOrganizationName *string   `json:"end_user_organization_name,omitempty"`
	EndUserOriginID         *string   `json:"end_user_origin_id,omitempty"`
	ID                      *string   `json:"id,omitempty"`
	Integration             *string   `json:"integration,omitempty"`
	IntegrationSlug         *string   `json:"integration_slug,omitempty"`
	// Whether a Production Linked Account's credentials match another existing Production Linked Account. This field is `null` for Test Linked Accounts, incomplete Production Linked Accounts, and ignored duplicate Production Linked Account sets.
	IsDuplicate        *bool   `json:"is_duplicate,omitempty"`
	Status             *string `json:"status,omitempty"`
	WebhookListenerURL *string `json:"webhook_listener_url,omitempty"`
}

func (o *AccountDetails) GetCategory() *Category {
	if o == nil {
		return nil
	}
	return o.Category
}

func (o *AccountDetails) GetEndUserEmailAddress() *string {
	if o == nil {
		return nil
	}
	return o.EndUserEmailAddress
}

func (o *AccountDetails) GetEndUserOrganizationName() *string {
	if o == nil {
		return nil
	}
	return o.EndUserOrganizationName
}

func (o *AccountDetails) GetEndUserOriginID() *string {
	if o == nil {
		return nil
	}
	return o.EndUserOriginID
}

func (o *AccountDetails) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *AccountDetails) GetIntegration() *string {
	if o == nil {
		return nil
	}
	return o.Integration
}

func (o *AccountDetails) GetIntegrationSlug() *string {
	if o == nil {
		return nil
	}
	return o.IntegrationSlug
}

func (o *AccountDetails) GetIsDuplicate() *bool {
	if o == nil {
		return nil
	}
	return o.IsDuplicate
}

func (o *AccountDetails) GetStatus() *string {
	if o == nil {
		return nil
	}
	return o.Status
}

func (o *AccountDetails) GetWebhookListenerURL() *string {
	if o == nil {
		return nil
	}
	return o.WebhookListenerURL
}
