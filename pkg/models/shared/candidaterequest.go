// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"time"
)

// CandidateRequest - # The Candidate Object
// ### Description
// The `Candidate` object is used to represent profile information about a given Candidate. Because it is specific to a Candidate, this information stays constant across applications.
// ### Usage Example
// Fetch from the `LIST Candidates` endpoint and filter by `ID` to show all candidates.
type CandidateRequest struct {
	// Array of `Application` object IDs.
	Applications []string `json:"applications,omitempty"`
	// Array of `Attachment` object IDs.
	Attachments []string `json:"attachments,omitempty"`
	// Whether or not the candidate can be emailed.
	CanEmail *bool `json:"can_email,omitempty"`
	// The candidate's current company.
	Company        *string               `json:"company,omitempty"`
	EmailAddresses []EmailAddressRequest `json:"email_addresses,omitempty"`
	// The candidate's first name.
	FirstName         *string                `json:"first_name,omitempty"`
	IntegrationParams map[string]interface{} `json:"integration_params,omitempty"`
	// Whether or not the candidate is private.
	IsPrivate *bool `json:"is_private,omitempty"`
	// When the most recent interaction with the candidate occurred.
	LastInteractionAt *time.Time `json:"last_interaction_at,omitempty"`
	// The candidate's last name.
	LastName            *string                `json:"last_name,omitempty"`
	LinkedAccountParams map[string]interface{} `json:"linked_account_params,omitempty"`
	// The candidate's locations.
	Locations        []string             `json:"locations,omitempty"`
	PhoneNumbers     []PhoneNumberRequest `json:"phone_numbers,omitempty"`
	RemoteTemplateID *string              `json:"remote_template_id,omitempty"`
	// Array of `Tag` names as strings.
	Tags []string `json:"tags,omitempty"`
	// The candidate's current title.
	Title *string      `json:"title,omitempty"`
	Urls  []URLRequest `json:"urls,omitempty"`
}

func (o *CandidateRequest) GetApplications() []string {
	if o == nil {
		return nil
	}
	return o.Applications
}

func (o *CandidateRequest) GetAttachments() []string {
	if o == nil {
		return nil
	}
	return o.Attachments
}

func (o *CandidateRequest) GetCanEmail() *bool {
	if o == nil {
		return nil
	}
	return o.CanEmail
}

func (o *CandidateRequest) GetCompany() *string {
	if o == nil {
		return nil
	}
	return o.Company
}

func (o *CandidateRequest) GetEmailAddresses() []EmailAddressRequest {
	if o == nil {
		return nil
	}
	return o.EmailAddresses
}

func (o *CandidateRequest) GetFirstName() *string {
	if o == nil {
		return nil
	}
	return o.FirstName
}

func (o *CandidateRequest) GetIntegrationParams() map[string]interface{} {
	if o == nil {
		return nil
	}
	return o.IntegrationParams
}

func (o *CandidateRequest) GetIsPrivate() *bool {
	if o == nil {
		return nil
	}
	return o.IsPrivate
}

func (o *CandidateRequest) GetLastInteractionAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.LastInteractionAt
}

func (o *CandidateRequest) GetLastName() *string {
	if o == nil {
		return nil
	}
	return o.LastName
}

func (o *CandidateRequest) GetLinkedAccountParams() map[string]interface{} {
	if o == nil {
		return nil
	}
	return o.LinkedAccountParams
}

func (o *CandidateRequest) GetLocations() []string {
	if o == nil {
		return nil
	}
	return o.Locations
}

func (o *CandidateRequest) GetPhoneNumbers() []PhoneNumberRequest {
	if o == nil {
		return nil
	}
	return o.PhoneNumbers
}

func (o *CandidateRequest) GetRemoteTemplateID() *string {
	if o == nil {
		return nil
	}
	return o.RemoteTemplateID
}

func (o *CandidateRequest) GetTags() []string {
	if o == nil {
		return nil
	}
	return o.Tags
}

func (o *CandidateRequest) GetTitle() *string {
	if o == nil {
		return nil
	}
	return o.Title
}

func (o *CandidateRequest) GetUrls() []URLRequest {
	if o == nil {
		return nil
	}
	return o.Urls
}
