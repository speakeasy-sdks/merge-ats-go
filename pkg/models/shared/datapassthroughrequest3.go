// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

// DataPassthroughRequest3 - # The DataPassthrough Object
// ### Description
// The `DataPassthrough` object is used to send information to an otherwise-unsupported third-party endpoint.
//
// ### Usage Example
// Create a `DataPassthrough` to get team hierarchies from your Rippling integration.
type DataPassthroughRequest3 struct {
	BaseURLOverride *string `form:"name=base_url_override" multipartForm:"name=base_url_override"`
	Data            *string `form:"name=data" multipartForm:"name=data"`
	// The headers to use for the request (Merge will handle the account's authorization headers). `Content-Type` header is required for passthrough. Choose content type corresponding to expected format of receiving server.
	Headers map[string]interface{} `form:"name=headers,json" multipartForm:"name=headers,json"`
	Method  interface{}            `form:"name=method" multipartForm:"name=method"`
	// Pass an array of `MultipartFormField` objects in here instead of using the `data` param if `request_format` is set to `MULTIPART`.
	MultipartFormData []MultipartFormFieldRequest `form:"name=multipart_form_data,json" multipartForm:"name=multipart_form_data,json"`
	// Optional. If true, the response will always be an object of the form `{"type": T, "value": ...}` where `T` will be one of `string, boolean, number, null, array, object`.
	NormalizeResponse *bool       `form:"name=normalize_response" multipartForm:"name=normalize_response"`
	Path              string      `form:"name=path" multipartForm:"name=path"`
	RequestFormat     interface{} `form:"name=request_format" multipartForm:"name=request_format"`
}

func (o *DataPassthroughRequest3) GetBaseURLOverride() *string {
	if o == nil {
		return nil
	}
	return o.BaseURLOverride
}

func (o *DataPassthroughRequest3) GetData() *string {
	if o == nil {
		return nil
	}
	return o.Data
}

func (o *DataPassthroughRequest3) GetHeaders() map[string]interface{} {
	if o == nil {
		return nil
	}
	return o.Headers
}

func (o *DataPassthroughRequest3) GetMethod() interface{} {
	if o == nil {
		return nil
	}
	return o.Method
}

func (o *DataPassthroughRequest3) GetMultipartFormData() []MultipartFormFieldRequest {
	if o == nil {
		return nil
	}
	return o.MultipartFormData
}

func (o *DataPassthroughRequest3) GetNormalizeResponse() *bool {
	if o == nil {
		return nil
	}
	return o.NormalizeResponse
}

func (o *DataPassthroughRequest3) GetPath() string {
	if o == nil {
		return ""
	}
	return o.Path
}

func (o *DataPassthroughRequest3) GetRequestFormat() interface{} {
	if o == nil {
		return nil
	}
	return o.RequestFormat
}
