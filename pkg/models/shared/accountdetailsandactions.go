// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// AccountDetailsAndActionsCategory - * `hris` - hris
// * `ats` - ats
// * `accounting` - accounting
// * `ticketing` - ticketing
// * `crm` - crm
// * `mktg` - mktg
// * `filestorage` - filestorage
type AccountDetailsAndActionsCategory string

const (
	AccountDetailsAndActionsCategoryHris        AccountDetailsAndActionsCategory = "hris"
	AccountDetailsAndActionsCategoryAts         AccountDetailsAndActionsCategory = "ats"
	AccountDetailsAndActionsCategoryAccounting  AccountDetailsAndActionsCategory = "accounting"
	AccountDetailsAndActionsCategoryTicketing   AccountDetailsAndActionsCategory = "ticketing"
	AccountDetailsAndActionsCategoryCrm         AccountDetailsAndActionsCategory = "crm"
	AccountDetailsAndActionsCategoryMktg        AccountDetailsAndActionsCategory = "mktg"
	AccountDetailsAndActionsCategoryFilestorage AccountDetailsAndActionsCategory = "filestorage"
)

func (e AccountDetailsAndActionsCategory) ToPointer() *AccountDetailsAndActionsCategory {
	return &e
}

func (e *AccountDetailsAndActionsCategory) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "hris":
		fallthrough
	case "ats":
		fallthrough
	case "accounting":
		fallthrough
	case "ticketing":
		fallthrough
	case "crm":
		fallthrough
	case "mktg":
		fallthrough
	case "filestorage":
		*e = AccountDetailsAndActionsCategory(v)
		return nil
	default:
		return fmt.Errorf("invalid value for AccountDetailsAndActionsCategory: %v", v)
	}
}

// AccountDetailsAndActionsStatus - * `COMPLETE` - COMPLETE
// * `INCOMPLETE` - INCOMPLETE
// * `RELINK_NEEDED` - RELINK_NEEDED
type AccountDetailsAndActionsStatus string

const (
	AccountDetailsAndActionsStatusComplete     AccountDetailsAndActionsStatus = "COMPLETE"
	AccountDetailsAndActionsStatusIncomplete   AccountDetailsAndActionsStatus = "INCOMPLETE"
	AccountDetailsAndActionsStatusRelinkNeeded AccountDetailsAndActionsStatus = "RELINK_NEEDED"
)

func (e AccountDetailsAndActionsStatus) ToPointer() *AccountDetailsAndActionsStatus {
	return &e
}

func (e *AccountDetailsAndActionsStatus) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "COMPLETE":
		fallthrough
	case "INCOMPLETE":
		fallthrough
	case "RELINK_NEEDED":
		*e = AccountDetailsAndActionsStatus(v)
		return nil
	default:
		return fmt.Errorf("invalid value for AccountDetailsAndActionsStatus: %v", v)
	}
}

// AccountDetailsAndActions - # The LinkedAccount Object
// ### Description
// The `LinkedAccount` object is used to represent an end user's link with a specific integration.
//
// ### Usage Example
// View a list of your organization's `LinkedAccount` objects.
type AccountDetailsAndActions struct {
	Category                *AccountDetailsAndActionsCategory    `json:"category,omitempty"`
	EndUserEmailAddress     string                               `json:"end_user_email_address"`
	EndUserOrganizationName string                               `json:"end_user_organization_name"`
	EndUserOriginID         *string                              `json:"end_user_origin_id,omitempty"`
	ID                      string                               `json:"id"`
	Integration             *AccountDetailsAndActionsIntegration `json:"integration,omitempty"`
	// Whether a Production Linked Account's credentials match another existing Production Linked Account. This field is `null` for Test Linked Accounts, incomplete Production Linked Accounts, and ignored duplicate Production Linked Account sets.
	IsDuplicate        *bool                          `json:"is_duplicate,omitempty"`
	Status             AccountDetailsAndActionsStatus `json:"status"`
	StatusDetail       *string                        `json:"status_detail,omitempty"`
	WebhookListenerURL string                         `json:"webhook_listener_url"`
}

func (o *AccountDetailsAndActions) GetCategory() *AccountDetailsAndActionsCategory {
	if o == nil {
		return nil
	}
	return o.Category
}

func (o *AccountDetailsAndActions) GetEndUserEmailAddress() string {
	if o == nil {
		return ""
	}
	return o.EndUserEmailAddress
}

func (o *AccountDetailsAndActions) GetEndUserOrganizationName() string {
	if o == nil {
		return ""
	}
	return o.EndUserOrganizationName
}

func (o *AccountDetailsAndActions) GetEndUserOriginID() *string {
	if o == nil {
		return nil
	}
	return o.EndUserOriginID
}

func (o *AccountDetailsAndActions) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *AccountDetailsAndActions) GetIntegration() *AccountDetailsAndActionsIntegration {
	if o == nil {
		return nil
	}
	return o.Integration
}

func (o *AccountDetailsAndActions) GetIsDuplicate() *bool {
	if o == nil {
		return nil
	}
	return o.IsDuplicate
}

func (o *AccountDetailsAndActions) GetStatus() AccountDetailsAndActionsStatus {
	if o == nil {
		return AccountDetailsAndActionsStatus("")
	}
	return o.Status
}

func (o *AccountDetailsAndActions) GetStatusDetail() *string {
	if o == nil {
		return nil
	}
	return o.StatusDetail
}

func (o *AccountDetailsAndActions) GetWebhookListenerURL() string {
	if o == nil {
		return ""
	}
	return o.WebhookListenerURL
}
