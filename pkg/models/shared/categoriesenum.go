// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// CategoriesEnum - * `hris` - hris
// * `ats` - ats
// * `accounting` - accounting
// * `ticketing` - ticketing
// * `crm` - crm
// * `mktg` - mktg
// * `filestorage` - filestorage
type CategoriesEnum string

const (
	CategoriesEnumHris        CategoriesEnum = "hris"
	CategoriesEnumAts         CategoriesEnum = "ats"
	CategoriesEnumAccounting  CategoriesEnum = "accounting"
	CategoriesEnumTicketing   CategoriesEnum = "ticketing"
	CategoriesEnumCrm         CategoriesEnum = "crm"
	CategoriesEnumMktg        CategoriesEnum = "mktg"
	CategoriesEnumFilestorage CategoriesEnum = "filestorage"
)

func (e CategoriesEnum) ToPointer() *CategoriesEnum {
	return &e
}

func (e *CategoriesEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "hris":
		fallthrough
	case "ats":
		fallthrough
	case "accounting":
		fallthrough
	case "ticketing":
		fallthrough
	case "crm":
		fallthrough
	case "mktg":
		fallthrough
	case "filestorage":
		*e = CategoriesEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CategoriesEnum: %v", v)
	}
}
