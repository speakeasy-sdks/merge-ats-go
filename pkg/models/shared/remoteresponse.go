// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// ResponseType - * `JSON` - JSON
// * `BASE64_GZIP` - BASE64_GZIP
type ResponseType string

const (
	ResponseTypeJSON       ResponseType = "JSON"
	ResponseTypeBase64Gzip ResponseType = "BASE64_GZIP"
)

func (e ResponseType) ToPointer() *ResponseType {
	return &e
}

func (e *ResponseType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "JSON":
		fallthrough
	case "BASE64_GZIP":
		*e = ResponseType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ResponseType: %v", v)
	}
}

// RemoteResponse - # The RemoteResponse Object
// ### Description
// The `RemoteResponse` object is used to represent information returned from a third-party endpoint.
//
// ### Usage Example
// View the `RemoteResponse` returned from your `DataPassthrough`.
type RemoteResponse struct {
	Headers         map[string]interface{} `json:"headers,omitempty"`
	Method          string                 `json:"method"`
	Path            string                 `json:"path"`
	Response        interface{}            `json:"response"`
	ResponseHeaders map[string]interface{} `json:"response_headers,omitempty"`
	ResponseType    *ResponseType          `json:"response_type,omitempty"`
	Status          int64                  `json:"status"`
}

func (o *RemoteResponse) GetHeaders() map[string]interface{} {
	if o == nil {
		return nil
	}
	return o.Headers
}

func (o *RemoteResponse) GetMethod() string {
	if o == nil {
		return ""
	}
	return o.Method
}

func (o *RemoteResponse) GetPath() string {
	if o == nil {
		return ""
	}
	return o.Path
}

func (o *RemoteResponse) GetResponse() interface{} {
	if o == nil {
		return nil
	}
	return o.Response
}

func (o *RemoteResponse) GetResponseHeaders() map[string]interface{} {
	if o == nil {
		return nil
	}
	return o.ResponseHeaders
}

func (o *RemoteResponse) GetResponseType() *ResponseType {
	if o == nil {
		return nil
	}
	return o.ResponseType
}

func (o *RemoteResponse) GetStatus() int64 {
	if o == nil {
		return 0
	}
	return o.Status
}
